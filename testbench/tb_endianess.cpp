#include "Vendianess.h" // Generated by Verilator
#include "verilated.h"
#include "verilated_vcd_c.h"

#include <iostream>
#include <iomanip>

#include "utils/colors.h"
#include "utils/utils.h"

char *module = (char *)"Endianess";

// Main
int main(int argc, char **argv)
{
    Verilated::commandArgs(argc, argv);

    // Instantiate model
    Vendianess *tb = new Vendianess;

    // Setup waveform tracing

    Verilated::traceEverOn(true);
    VerilatedVcdC *tfp = new VerilatedVcdC;
    tfp->open("simout/endianess.vcd");

    // Reset sequence
    unsigned int to_rev[8] = {
        0xdeadbeef,
        0xaabbccdd,
        0xeeff1122,
        0x33445566,
        0x778899aa,
        0xcafecafe,
        0xa5a5a5a5,
        0xaaaabbbb};
    unsigned int reversed[8] = {
        0xefbeadde,
        0xddccbbaa,
        0x2211ffee,
        0x66554433,
        0xaa998877,
        0xfecafeca,
        0xa5a5a5a5,
        0xbbbbaaaa};

    initial_print(module);

    for (int k = 0; k < 8; k++)
    {
        tb->in = to_rev[k];
        tb->eval();

        equality_print((char *)"Endianness", k, tb->out, reversed[k]);
    }

    final_print(module);

    tfp->close();

    uint64_t fail, pass;
    get_counts(&pass, &fail);

    delete tb;
    return fail;
}
