#include "Valu2.h" // Generated by Verilator
#include "verilated.h"
#include "verilated_vcd_c.h"

#include <iostream>
#include <iomanip>

#include "utils/colors.h"
#include "utils/utils.h"

int input1[10] = {0, 1, 10, 100, 1000, -1, -10, -100, -1000, -2000000000};
int input2[10] = {2, 5, 8, 17, 22, -32, -39, 1024, 18, 42};

char *module = (char *)"ALU5";

// Main
int main(int argc, char **argv)
{
    Verilated::commandArgs(argc, argv);

    // Instantiate model
    Valu2 *tb = new Valu2;

    // Setup waveform tracing
    Verilated::traceEverOn(true);
    VerilatedVcdC *tfp = new VerilatedVcdC;
    tb->trace(tfp, 99);
    tfp->open("simout/alu2.vcd");

    initial_print(module);

    // Reset sequence
    tb->rst_n = 0;
    stick(tb, tfp);
    tb->rst_n = 1;
    stick(tb, tfp);
    stick(tb, tfp);
    stick(tb, tfp);

    int cycle = 0;

    final_print(module);

    tfp->close();

    uint64_t fail, pass;
    get_counts(&pass, &fail);

    delete tb;
    return fail;
}
