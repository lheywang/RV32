#include "Vcounter.h" // Generated by Verilator
#include "verilated.h"

#include "testbench.h"

// Main
int main(int argc, char **argv)
{
    Verilated::commandArgs(argc, argv);
    Testbench<Vcounter> tb("Counter");

    tb.dut->clk_en = 1;
    tb.dut->enable = 1;
    tb.reset();

    // Count test
    for (uint64_t k = 1; k < 10001; k++)
    {
        tb.check_equality((unsigned int)tb.dut->outL, (unsigned int)k, "Count");
        tb.tick();
        tb.increment_cycles();
    }

    // Disabled test
    tb.dut->clk_en = 1;
    tb.dut->enable = 0;
    tb.reset();

    for (uint64_t k = 1; k < 10001; k++)
    {
        tb.check_equality((unsigned int)tb.dut->outL, (unsigned int)0, "Count");
        tb.tick();
        tb.increment_cycles();
    }

    return tb.get_return();
}
